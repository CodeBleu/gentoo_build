---

- name: Set package keywords
  ansible.builtin.copy:
    src: all_keywords
    dest: /etc/portage/package.accept_keywords
    group: root
    owner: root
    mode: '0644'

- name: Check if .git exists in repo path
  ansible.builtin.stat:
    path: /var/db/repos/gentoo/.git
  register: git_repo
  tags: portage

- name: Install a Portage (repository tree) snapshot
  ansible.builtin.command: "emaint sync --auto"
  register: portage_snapshot
  changed_when: false
  when: not git_repo.stat.exists
  tags: portage

# gentoolkit needed for ansible package manager to work
- name: Install gentoolkit
  ansible.builtin.command: emerge gentoolkit
  changed_when: false
  tags: portage

- name: Install misc packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - vim
    - curl
    - tmux
  tags: packages

- name: Install Git
  ansible.builtin.package:
    name: dev-vcs/git
    state: installed
  when: not git_repo.stat.exists
  tags: portage

- name: Replace gentoo.conf file (git)
  ansible.builtin.copy:
    src: gentoo-git.conf
    dest: /etc/portage/repos.conf/gentoo.conf
    mode: 0644
  when: not git_repo.stat.exists
  tags: portage

- name: Clean repo for Git usage
  ansible.builtin.file:
    path: /var/db/repos/gentoo
    state: absent
  when: not git_repo.stat.exists
  tags: portage

- name: Update emaint sync after switch to Git
  ansible.builtin.command: "emaint sync --auto"
  register: portage_snapshot
  changed_when: false
  when: not git_repo.stat.exists
  tags: portage

- name: Update Portage  # noqa package-latest
  ansible.builtin.package:
    name: portage
    oneshot: true
    state: latest
  tags: portage

- name: Sync and Update @world
  community.general.portage:
    package: '@world'
    update: "true"
    deep: "true"
    newuse: "true"
    sync: "yes"
  tags: portage,update_world

- name: Remove unneeded packages
  community.general.portage:
    depclean: true
  tags: portage,update_world

- name: Setup Timezone
  ansible.builtin.template:
    src: timezone.j2
    dest: /etc/timezone
    owner: root
    group: root
    mode: '0644'
  tags: time_locale

- name: Reconfigure Timezone-data package
  ansible.builtin.command: emerge --config sys-libs/timezone-data
  changed_when: false
  tags: time_locale

- name: Append locale info
  ansible.builtin.lineinfile:
    path: /etc/locale.gen
    line: "{{ item }}"
    create: true
    mode: 0644
  with_items:
    - en_US ISO-8859-1
    - en_US.UTF-8 UTF-8
  tags: time_locale

- name: Initially set locale to "C"
  ansible.builtin.command: eselect locale set "C"
  changed_when: false
  tags: time_locale

- name: Reset ssh connection
  ansible.builtin.meta: reset_connection
  tags: time_locale

- name: Install cpuid2cpuflags
  ansible.builtin.package:
    name: app-portage/cpuid2cpuflags
    oneshot: true
    state: present
  tags: cpu

- name: Run cpuid2cpuflags
  ansible.builtin.command: cpuid2cpuflags
  changed_when: false
  register: cpuid
  tags: cpu

- name: Append cpu flags to make.conf
  ansible.builtin.replace:
    path: /etc/portage/make.conf
    regexp: '^CPU_FLAGS_X86.*$'
    replace: "CPU_FLAGS_X86=\"{{ cpuid.stdout.split(':')[1] }}\""
  tags: cpu

- name: Select Desktop Profile
  ansible.builtin.command: eselect profile set "default/linux/amd64/17.1/desktop"
  changed_when: false
  tags: profile

- name: Sync and Update @world
  community.general.portage:
    package: '@world'
    update: "true"
    deep: "true"
    newuse: "true"
    sync: "yes"
  tags: profile

# chapter 8 Sakaki
- name: Create package.license directory
  ansible.builtin.file:
    path: /etc/portage/package.license
    state: directory
    owner: root
    group: root
    mode: '0770'

- name: Licensing & Download Kernel Sources/Firmware
  ansible.builtin.file:
    path: /etc/portage/package.license/zzz_via_autounmask
    state: touch
    owner: root
    group: root
    mode: '0770'

- name: No deblobing
  ansible.builtin.copy:
    content: 'sys-kernel/linux-firmware linux-fw-redistributable no-source-code'
    dest: '/etc/portage/package.license/linux-firmware'
    mode: '0770'

- name: Install kernel sources
  community.general.portage:
    package: "sys-kernel/{{ livecd_kernel_sources }}"
    state: present

- name: Setup genpi-tools (sakaki replacement) repo
  ansible.builtin.copy:
    src: genpi-tools.conf
    dest: /etc/portage/repos.conf
    group: root
    owner: root
    mode: '0644'

- name: Sync genpi-tools repo
  ansible.builtin.command: "emaint sync --repo genpi-tools"
  changed_when: false

- name: Create env,package.env dir
  ansible.builtin.file:
    path: /etc/portage/{{ item }}
    state: directory
    owner: root
    group: root
    mode: '0644'
  with_items:
    - env
    - package.env

- name: Copy serialize-make.conf file
  ansible.builtin.copy:
    src: serialize-make.conf
    dest: /etc/portage/env
    group: root
    owner: root
    mode: '0644'

- name: Copy efitools env file
  ansible.builtin.copy:
    src: efitools
    dest: /etc/portage/package.env
    group: root
    owner: root
    mode: '0644'

- name: Copy USE files
  ansible.builtin.copy:
    src: "use/{{ item }}"
    dest: /etc/portage/package.use
    group: root
    owner: root
    mode: '0644'
  with_items:
    - plymouth
    - gdm
    - libdrm
    - genkernel-next

- name: Select kernel ( eselect )
  ansible.builtin.command: eselect kernel set 1
  changed_when: false

- name: Install genpi packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - sys-kernel/genkernel-next
    - sys-boot/plymouth
    - x11-libs/libdrm
    - app-crypt/efitools
    - app-portage/showem
    - sys-kernel/buildkernel

- name: Test eselect in (chroot)
  ansible.builtin.command: eselect news list
  register: eselect_test
  changed_when: false
  tags: portage

- name: Debug - eselect test
  ansible.builtin.debug:
    msg: "{{ eselect_test }}"
  tags: portage
